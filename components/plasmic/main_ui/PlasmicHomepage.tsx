/* eslint-disable */
/* tslint:disable */
// @ts-nocheck
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 7Q2kKTTfJ4NHrVPwfjBiGV
// Component: gyhpzCt0p5sj

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import {
  Flex as Flex__,
  MultiChoiceArg,
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicIcon as PlasmicIcon__,
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  PlasmicPageGuard as PlasmicPageGuard__,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  Stack as Stack__,
  StrictProps,
  Trans as Trans__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  get as $stateGet,
  hasVariant,
  initializeCodeComponentStates,
  initializePlasmicStates,
  makeFragment,
  omit,
  pick,
  renderPlasmicSlot,
  set as $stateSet,
  useCurrentUser,
  useDollarState,
  usePlasmicTranslator,
  useTrigger,
  wrapWithClassName
} from "@plasmicapp/react-web";
import {
  DataCtxReader as DataCtxReader__,
  useDataEnv,
  useGlobalActions
} from "@plasmicapp/react-web/lib/host";

import HeaderLanding from "../../HeaderLanding"; // plasmic-import: ITWOroSFH7VT/component
import HumbergerMenu from "../../HumbergerMenu"; // plasmic-import: 1LzZIhJKqT7B/component
import { Reveal } from "@plasmicpkgs/react-awesome-reveal";
import Accomplishment from "../../Accomplishment"; // plasmic-import: R0ImAezzOwdH/component
import Medalist from "../../Medalist"; // plasmic-import: WCscH0b-XY5W/component
import Medallists from "../../Medallists"; // plasmic-import: hP0FtLhVuQB7/component
import Button from "../../Button"; // plasmic-import: _MWZyCmj9Poj/component
import StoryFrame from "../../StoryFrame"; // plasmic-import: wRYUjyQykckx/component
import BlogPosts from "../../BlogPosts"; // plasmic-import: hUtB9mA7O5QJ/component
import Footer from "../../Footer"; // plasmic-import: LLPl5wc7oCu-/component
import { _useGlobalVariants } from "./plasmic"; // plasmic-import: 7Q2kKTTfJ4NHrVPwfjBiGV/projectModule
import { _useStyleTokens } from "./PlasmicStyleTokensProvider"; // plasmic-import: 7Q2kKTTfJ4NHrVPwfjBiGV/styleTokensProvider
import { _useStyleTokens as useStyleTokens_antd_5_hostless } from "../antd_5_hostless/PlasmicStyleTokensProvider"; // plasmic-import: ohDidvG9XsCeFumugENU3J/styleTokensProvider

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic.module.css"; // plasmic-import: 7Q2kKTTfJ4NHrVPwfjBiGV/projectcss
import sty from "./PlasmicHomepage.module.css"; // plasmic-import: gyhpzCt0p5sj/css

import CheckSvgIcon from "./icons/PlasmicIcon__CheckSvg"; // plasmic-import: 2D7jq9Mtq-9Z/icon

createPlasmicElementProxy;

export type PlasmicHomepage__VariantMembers = {};
export type PlasmicHomepage__VariantsArgs = {};
type VariantPropType = keyof PlasmicHomepage__VariantsArgs;
export const PlasmicHomepage__VariantProps = new Array<VariantPropType>();

export type PlasmicHomepage__ArgsType = {};
type ArgPropType = keyof PlasmicHomepage__ArgsType;
export const PlasmicHomepage__ArgProps = new Array<ArgPropType>();

export type PlasmicHomepage__OverridesType = {
  page?: Flex__<"div">;
  headerLanding?: Flex__<typeof HeaderLanding>;
  humbergerMenu?: Flex__<typeof HumbergerMenu>;
  reveal?: Flex__<typeof Reveal>;
  accomplishment?: Flex__<typeof Accomplishment>;
  testimonials?: Flex__<"section">;
  medalists?: Flex__<"div">;
  medallists?: Flex__<typeof Medallists>;
  button?: Flex__<typeof Button>;
  storyFrame?: Flex__<typeof StoryFrame>;
  blogPosts?: Flex__<typeof BlogPosts>;
  footer?: Flex__<typeof Footer>;
};

export interface DefaultHomepageProps {}

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicHomepage__RenderFunc(props: {
  variants: PlasmicHomepage__VariantsArgs;
  args: PlasmicHomepage__ArgsType;
  overrides: PlasmicHomepage__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );

  const $props = {
    ...args,
    ...variants
  };

  const __nextRouter = useNextRouter();

  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const stateSpecs: Parameters<typeof useDollarState>[0] = React.useMemo(
    () => [
      {
        path: "storyFrame.stage2",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => "_1"
      },
      {
        path: "events",
        type: "private",
        variableType: "object",
        initFunc: ({ $props, $state, $queries, $ctx }) =>
          (() => {
            try {
              return [
                {
                  title: "دوست علمی",
                  date: "1396/08/11",
                  desc: "",
                  fulldesc: "",
                  image:
                    "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQrMrgY_njLiji-wxD1ADKCW1DTH7KtOo9rDg&s"
                },
                {
                  title: "جشن مدال سال 1397",
                  date: "",
                  desc: "",
                  fulldesc: "",
                  image:
                    "https://didehbanelmiran.ir/wp-content/uploads/2019/02/olympiad-Copy-2-e1551005267417.jpg"
                },
                {
                  title: "سلول‌های بنیادی برای همه",
                  date: "2023-06-30",
                  desc: "This is the third story",
                  fulldesc: "",
                  image:
                    "https://media.imna.ir/d/2022/12/13/3/1831927.jpg?ts=1670908119000"
                }
              ];
            } catch (e) {
              if (
                e instanceof TypeError ||
                e?.plasmicType === "PlasmicUndefinedDataError"
              ) {
                return {};
              }
              throw e;
            }
          })()
      },
      {
        path: "blogPosts.eventsList",
        type: "private",
        variableType: "object",
        initFunc: ({ $props, $state, $queries, $ctx }) =>
          (() => {
            try {
              return $state.events;
            } catch (e) {
              if (
                e instanceof TypeError ||
                e?.plasmicType === "PlasmicUndefinedDataError"
              ) {
                return {};
              }
              throw e;
            }
          })()
      },
      {
        path: "eftekharat",
        type: "private",
        variableType: "array",
        initFunc: ({ $props, $state, $queries, $ctx }) =>
          (() => {
            try {
              return [
                "15 مدال رنگارنگ المپیادهای علمی",
                "بیش از 3000 دانش‌آموز فارغ‌التحصیل",
                "بیش از 200 دانش‌جو در رشته‌ها و دانشگاه‌های برتر"
              ];
            } catch (e) {
              if (
                e instanceof TypeError ||
                e?.plasmicType === "PlasmicUndefinedDataError"
              ) {
                return [
                  "\u0645\u0648\u0636\u0648\u0639 \u0627\u0648\u0644\u06cc \u06a9\u0647 \u0628\u0647\u0634 \u0627\u0641\u062a\u062e\u0627\u0631 \u0645\u06cc\u06a9\u0646\u06cc\u0645.",
                  "\u0645\u0648\u0636\u0648\u0639 \u062f\u0648\u0645\u06cc \u06a9\u0647 \u0628\u0647\u0634 \u0627\u0641\u062a\u062e\u0627\u0631 \u0645\u06cc\u06a9\u0646\u06cc\u0645.",
                  "\u0645\u0648\u0636\u0648\u0639 \u0633\u0648\u0645\u06cc \u06a9\u0647 \u0628\u0647\u0634 \u0627\u0641\u062a\u062e\u0627\u0631 \u0645\u06cc\u06a9\u0646\u06cc\u0645."
                ];
              }
              throw e;
            }
          })()
      },
      {
        path: "medallists",
        type: "private",
        variableType: "object",
        initFunc: ({ $props, $state, $queries, $ctx }) =>
          (() => {
            try {
              return [
                {
                  name: "پانیذ قاسمی",
                  accomplishment:
                    "مدال نقره المپیاد سلول‌های بنیادی سال ۱۳۹۶-۱۳۹۷",
                  story: "داستان مدال آور",
                  profile:
                    "https://i.postimg.cc/66P5m2XT/IMG-20250212-034652-641.jpg",
                  type: "نقره"
                },
                {
                  name: "فرنوش فرشچیان",
                  accomplishment: "مدال برنز المپیاد شیمی سال ۱۳۹۶-۱۳۹۷",
                  story: "داستان مدال آور",
                  profile:
                    "https://i.postimg.cc/KzM3Sd6z/IMG-20250212-041032-911.jpg",
                  type: "برنز"
                },
                {
                  name: "پارسا بازدار",
                  accomplishment:
                    "مدال نقره المپیاد سلول های بنیادی سال 1394-1395",
                  story: "2داستان مدال آور",
                  profile:
                    "https://i.postimg.cc/j2YwsMTh/IMG-20250212-041033-187.jpg",
                  type: "نقره"
                },
                {
                  name: "مریم توحیدی",
                  accomplishment: "مدال طلا المپیاد کارآفرینی سال ۱۳۹۸ - ۱۳۹۹",
                  story: "داستان مدال آور",
                  profile:
                    "https://i.postimg.cc/7YgcYh31/IMG-20250212-041033-395.jpg",
                  type: "طلا"
                },
                {
                  name: "محمد چراغی",
                  accomplishment: "مدال نقره المپیاد ریاضی سال ۱۳۹۶ - ۱۳۹۷",
                  story: "داستان مدال آور",
                  profile:
                    "https://i.postimg.cc/nc65n79h/IMG-20250212-041033-337.jpg",
                  type: "نقره"
                },
                {
                  name: "آریا نصرت الهی",
                  accomplishment: "مدال نقره المپیاد شیمی سال ۱۳۹۸ - ۱۳۹۹",
                  story: "داستان مدال آور",
                  profile:
                    "https://i.postimg.cc/PrG9jYwr/IMG-20250212-041033-609.jpg",
                  type: "نقره"
                },
                {
                  name: "رضا زمانی",
                  accomplishment: "مدال برنز المپیاد شیمی سال ۱۳۹۹ - ۱۴۰۰",
                  story: "داستان مدال آور",
                  profile:
                    "https://i.postimg.cc/HkwSHNC6/IMG-20250212-041033-157.jpg",
                  type: "برنز"
                },
                {
                  name: "محمدمهدی بارانی",
                  accomplishment: "مدال برنز المپیاد شیمی سال ۱۴۰۰-۱۴۰۱",
                  story: "داستان مدال آور",
                  profile:
                    "https://i.postimg.cc/657gsz3P/IMG-20250212-041033-894.jpg",
                  type: "برنز"
                },
                {
                  name: "طنین نصرتی",
                  accomplishment: "مدال برنز المپیاد ریاضی سال 1401-1402",
                  story: "داستان مدال آور",
                  profile:
                    "https://i.postimg.cc/tR1Gy9vD/IMG-20250212-041034-065.jpg",
                  type: "برنز"
                },
                {
                  name: "شایان شعاعی",
                  accomplishment: "مدال نقره المپیاد شیمی سال 1402-1403",
                  story: "داستان مدال آور",
                  profile:
                    "https://i.postimg.cc/GtDfDhZC/IMG-20250212-041034-029.jpg",
                  type: "نقره"
                },
                {
                  name: "پارسا صادقیان",
                  accomplishment: " مدال نقره المپیاد شیمی سال1402-1403",
                  story: "داستان مدال آور",
                  profile:
                    "https://i.postimg.cc/Ss35jz1d/IMG-20250212-041033-159.jpg",
                  type: "نقره"
                },
                {
                  name: "سجاد کهزادی",
                  accomplishment: "مدال برنز المپیاد شیمی سال 1402-1403",
                  story: "داستان مدال آور",
                  profile:
                    "https://i.postimg.cc/q7GZc5bN/IMG-20250212-041033-190.jpg",
                  type: "برنز"
                },
                {
                  name: "آیناز تابانی",
                  accomplishment: "مدال برنز المپیاد علوم زمین سال 1402-1403",
                  story: "داستان مدال آور",
                  profile:
                    "https://i.postimg.cc/xC0hW2JG/IMG-20250212-041033-956.jpg",
                  type: "برنز"
                },
                {
                  name: "زهرا شمالی پور",
                  accomplishment: "مدال برنز سلول های بنیادی سال 1402-1403",
                  story: "داستان مدال آور",
                  profile:
                    "https://i.postimg.cc/Nfmh9pcH/IMG-20250212-041033-782.jpg",
                  type: "برنز"
                }
              ];
            } catch (e) {
              if (
                e instanceof TypeError ||
                e?.plasmicType === "PlasmicUndefinedDataError"
              ) {
                return {};
              }
              throw e;
            }
          })()
      }
    ],
    [$props, $ctx, $refs]
  );
  const $state = useDollarState(stateSpecs, {
    $props,
    $ctx,
    $queries: {},
    $refs
  });

  const globalVariants = _useGlobalVariants();
  const styleTokensClassNames = _useStyleTokens();
  const styleTokensClassNames_antd_5_hostless =
    useStyleTokens_antd_5_hostless();

  return (
    <React.Fragment>
      <Head></Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"page"}
          data-plasmic-override={overrides.page}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            styleTokensClassNames,
            styleTokensClassNames_antd_5_hostless,
            sty.page
          )}
          dir={"rtl"}
        >
          <div className={classNames(projectcss.all, sty.freeBox__t7RZv)}>
            <HeaderLanding
              data-plasmic-name={"headerLanding"}
              data-plasmic-override={overrides.headerLanding}
              className={classNames("__wab_instance", sty.headerLanding)}
            />

            <div className={classNames(projectcss.all, sty.columns__zEfQ)}>
              <div className={classNames(projectcss.all, sty.column__n2Ciu)}>
                <HumbergerMenu
                  data-plasmic-name={"humbergerMenu"}
                  data-plasmic-override={overrides.humbergerMenu}
                  className={classNames("__wab_instance", sty.humbergerMenu)}
                />

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__iMqLv
                  )}
                >
                  {"\u0622\u0644\u0646\u062f\u06a9\u0644\u0627\u0633"}
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__mhZug
                  )}
                >
                  {
                    "\u0645\u0639\u0644\u0645\u0627\u0646 \u0648 \u0645\u0634\u0627\u0648\u0631\u0627\u0646 \u0628\u062f\u0648\u0646 \u0645\u0631\u0632"
                  }
                </div>
              </div>
              <div className={classNames(projectcss.all, sty.column__xZi2U)}>
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img___8GTJr)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"eager"}
                  src={{
                    src: "/plasmic/main_ui/images/کوچیک1409X1300Px320X590Px320X295Px160X290PxSvg2.svg",
                    fullWidth: 120,
                    fullHeight: 217.5,
                    aspectRatio: 0.551724
                  }}
                />
              </div>
            </div>
            <div className={classNames(projectcss.all, sty.freeBox__gutYm)}>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__fG7OI
                )}
              >
                {
                  "\u0622\u0644\u0646\u062f \u06cc\u0639\u0646\u06cc \u0627\u0648\u0644\u06cc\u0646 \u067e\u0631\u062a\u0648 \u062e\u0648\u0631\u0634\u06cc\u062f"
                }
              </div>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__v3JtQ
                )}
              >
                {
                  "\n\u062a\u0627\u0631\u06cc\u06a9\u200c\u062a\u0631\u06cc\u0646 \u0644\u062d\u0638\u0647 \u0634\u0628\u060c \u067e\u06cc\u0634 \u0627\u0632 \u0637\u0644\u0648\u0639 \u0646\u062e\u0633\u062a\u06cc\u0646 \u067e\u0631\u062a\u0648 \u062e\u0648\u0631\u0634\u06cc\u062f \u0627\u0633\u062a. \u062f\u0631 \u0633\u06a9\u0648\u062a \u0634\u0647\u0631 \u0648 \u0637\u0628\u06cc\u0639\u062a\u060c \u062a\u0627\u0631\u06cc\u06a9\u06cc \u0628\u0647 \u0631\u0648\u0634\u0646\u06cc \u0645\u0628\u062f\u0644 \u0645\u06cc\u200c\u0634\u0648\u062f \u0648 \u067e\u06cc\u0627\u0645\u0634 \u0631\u0627 \u0628\u0631 \u0686\u0647\u0631\u0647 \u0647\u0631 \u0627\u0646\u0633\u0627\u0646\u06cc \u0645\u06cc\u200c\u0646\u0634\u0627\u0646\u062f. \u0627\u0632 \u062f\u0644 \u062a\u0627\u0631\u06cc\u06a9\u200c\u062a\u0631\u06cc\u0646 \u0644\u062d\u0638\u0627\u062a\u060c \u0631\u0648\u0634\u0646\u200c\u062a\u0631\u06cc\u0646 \u067e\u0631\u062a\u0648\u0647\u0627\u06cc \u0632\u0646\u062f\u06af\u06cc \u0632\u0627\u062f\u0647 \u0645\u06cc\u200c\u0634\u0648\u0646\u062f..."
                }
              </div>
            </div>
            <div className={classNames(projectcss.all, sty.freeBox__huRl5)}>
              <PlasmicImg__
                alt={""}
                className={classNames(sty.img__ukm7O)}
                displayHeight={"auto"}
                displayMaxHeight={"none"}
                displayMaxWidth={"100%"}
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={"auto"}
                loading={"lazy"}
                src={{
                  src: "/plasmic/main_ui/images/کوچیک1409X1300Px320X590Px320X295Px2Svg.svg",
                  fullWidth: 240,
                  fullHeight: 221.25,
                  aspectRatio: 1.084746
                }}
              />
            </div>
            <div className={classNames(projectcss.all, sty.freeBox___8VaL3)}>
              <PlasmicImg__
                alt={""}
                className={classNames(sty.img__iIvnK)}
                displayHeight={"auto"}
                displayMaxHeight={"none"}
                displayMaxWidth={"100%"}
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={"auto"}
                loading={"eager"}
                src={{
                  src: "/plasmic/main_ui/images/کوچیک1409X1300Px3Svg.svg",
                  fullWidth: 1056.75,
                  fullHeight: 975,
                  aspectRatio: 1.083846
                }}
              />
            </div>
          </div>
          <div className={classNames(projectcss.all, sty.freeBox__yfYbv)}>
            <Reveal
              data-plasmic-name={"reveal"}
              data-plasmic-override={overrides.reveal}
              className={classNames("__wab_instance", sty.reveal)}
              delay={0}
              duration={1500}
              effect={"fade"}
              triggerOnce={false}
            >
              <div className={classNames(projectcss.all, sty.columns___4DcUs)}>
                {(_par => (!_par ? [] : Array.isArray(_par) ? _par : [_par]))(
                  (() => {
                    try {
                      return $state.eftekharat;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return [];
                      }
                      throw e;
                    }
                  })()
                ).map((__plasmic_item_0, __plasmic_idx_0) => {
                  const currentItem = __plasmic_item_0;
                  const currentIndex = __plasmic_idx_0;
                  return (
                    <div
                      className={classNames(projectcss.all, sty.column__nlOYa)}
                      key={currentIndex}
                    >
                      <Accomplishment
                        data-plasmic-name={"accomplishment"}
                        data-plasmic-override={overrides.accomplishment}
                        className={classNames(
                          "__wab_instance",
                          sty.accomplishment
                        )}
                        content={(() => {
                          try {
                            return currentItem;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()}
                      />
                    </div>
                  );
                })}
              </div>
            </Reveal>
          </div>
          <div className={classNames(projectcss.all, sty.freeBox__rcwxj)}>
            <section
              data-plasmic-name={"testimonials"}
              data-plasmic-override={overrides.testimonials}
              className={classNames(projectcss.all, sty.testimonials)}
            >
              <div className={classNames(projectcss.all, sty.column___7Xrdc)}>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___8OYno
                  )}
                >
                  <React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ color: "var(--token-Rzes-3irx406)" }}
                    >
                      {
                        "\u0645\u062f\u0627\u0644 \u0622\u0648\u0631\u0627\u0646 \u0627\u0644\u0645\u067e\u06cc\u0627\u062f \u0627\u06cc\u0644\u0627\u0645"
                      }
                    </span>
                  </React.Fragment>
                </div>
                <div
                  data-plasmic-name={"medalists"}
                  data-plasmic-override={overrides.medalists}
                  className={classNames(projectcss.all, sty.medalists)}
                >
                  <Medalist
                    className={classNames(
                      "__wab_instance",
                      sty.medalist__t0MHn
                    )}
                  />

                  <Medalist
                    className={classNames(
                      "__wab_instance",
                      sty.medalist__cucRk
                    )}
                  />

                  <Medalist
                    className={classNames(
                      "__wab_instance",
                      sty.medalist___7WeMn
                    )}
                  />

                  <Medalist
                    className={classNames(
                      "__wab_instance",
                      sty.medalist__rf2Ae
                    )}
                  />
                </div>
                <Medallists
                  data-plasmic-name={"medallists"}
                  data-plasmic-override={overrides.medallists}
                  className={classNames("__wab_instance", sty.medallists)}
                  medallistsList={(() => {
                    try {
                      return $state.medallists;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return [
                          {
                            name: "\u0646\u0627\u0645 \u0645\u062f\u0627\u0644 \u0622\u0648\u0631",
                            accomplishment:
                              "\u0627\u0641\u062a\u062e\u0627\u0631\u0627\u062a \u06a9\u0633\u0628 \u0634\u062f\u0647",
                            story:
                              "\u062f\u0627\u0633\u062a\u0627\u0646 \u0645\u062f\u0627\u0644 \u0622\u0648\u0631",
                            profile:
                              "https://img.freepik.com/premium-vector/man-professional-business-casual-young-avatar-icon-illustration_1277826-623.jpg"
                          },
                          {
                            name: "\u0646\u0627\u0645 \u0645\u062f\u0627\u0644 \u0622\u0648\u0631",
                            accomplishment:
                              "\u0627\u0641\u062a\u062e\u0627\u0631\u0627\u062a \u06a9\u0633\u0628 \u0634\u062f\u0647",
                            story:
                              "\u062f\u0627\u0633\u062a\u0627\u0646 \u0645\u062f\u0627\u0644 \u0622\u0648\u0631",
                            profile:
                              "https://img.freepik.com/premium-vector/man-professional-business-casual-young-avatar-icon-illustration_1277826-623.jpg"
                          },
                          {
                            name: "\u0646\u0627\u0645 \u0645\u062f\u0627\u0644 \u0622\u0648\u0631",
                            accomplishment:
                              "\u0627\u0641\u062a\u062e\u0627\u0631\u0627\u062a \u06a9\u0633\u0628 \u0634\u062f\u0647",
                            story:
                              "\u062f\u0627\u0633\u062a\u0627\u0646 \u0645\u062f\u0627\u0644 \u0622\u0648\u0631",
                            profile:
                              "https://img.freepik.com/premium-vector/man-professional-business-casual-young-avatar-icon-illustration_1277826-623.jpg"
                          }
                        ];
                      }
                      throw e;
                    }
                  })()}
                />

                <Button
                  data-plasmic-name={"button"}
                  data-plasmic-override={overrides.button}
                  className={classNames("__wab_instance", sty.button)}
                  color={"blue"}
                  onClick={async event => {
                    const $steps = {};

                    $steps["goToMedallists2"] = true
                      ? (() => {
                          const actionArgs = { destination: `/medallists` };
                          return (({ destination }) => {
                            if (
                              typeof destination === "string" &&
                              destination.startsWith("#")
                            ) {
                              document
                                .getElementById(destination.substr(1))
                                .scrollIntoView({ behavior: "smooth" });
                            } else {
                              __nextRouter?.push(destination);
                            }
                          })?.apply(null, [actionArgs]);
                        })()
                      : undefined;
                    if (
                      $steps["goToMedallists2"] != null &&
                      typeof $steps["goToMedallists2"] === "object" &&
                      typeof $steps["goToMedallists2"].then === "function"
                    ) {
                      $steps["goToMedallists2"] = await $steps[
                        "goToMedallists2"
                      ];
                    }
                  }}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__qEBgL
                    )}
                  >
                    {"\u0646\u0645\u0627\u06cc\u0634   \u0647\u0645\u0647"}
                  </div>
                </Button>
              </div>
            </section>
          </div>
          <div
            className={classNames(projectcss.all, sty.freeBox__qmBY)}
            dir={"rtl"}
          >
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__cPbxy
              )}
            >
              {
                "\u0645\u0633\u06cc\u0631 \u062f\u0647 \u0633\u0627\u0644\u0647 \u0645\u0627..."
              }
            </div>
            <StoryFrame
              data-plasmic-name={"storyFrame"}
              data-plasmic-override={overrides.storyFrame}
              className={classNames("__wab_instance", sty.storyFrame)}
              onStage2Change={async (...eventArgs: any) => {
                generateStateOnChangeProp($state, [
                  "storyFrame",
                  "stage2"
                ]).apply(null, eventArgs);

                if (
                  eventArgs.length > 1 &&
                  eventArgs[1] &&
                  eventArgs[1]._plasmic_state_init_
                ) {
                  return;
                }
              }}
              stage2={generateStateValueProp($state, ["storyFrame", "stage2"])}
            />
          </div>
          <BlogPosts
            data-plasmic-name={"blogPosts"}
            data-plasmic-override={overrides.blogPosts}
            className={classNames("__wab_instance", sty.blogPosts)}
            eventsList={generateStateValueProp($state, [
              "blogPosts",
              "eventsList"
            ])}
            onEventsListChange={async (...eventArgs: any) => {
              generateStateOnChangeProp($state, [
                "blogPosts",
                "eventsList"
              ]).apply(null, eventArgs);

              if (
                eventArgs.length > 1 &&
                eventArgs[1] &&
                eventArgs[1]._plasmic_state_init_
              ) {
                return;
              }
            }}
          />

          <Footer
            data-plasmic-name={"footer"}
            data-plasmic-override={overrides.footer}
            className={classNames("__wab_instance", sty.footer)}
          />
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  page: [
    "page",
    "headerLanding",
    "humbergerMenu",
    "reveal",
    "accomplishment",
    "testimonials",
    "medalists",
    "medallists",
    "button",
    "storyFrame",
    "blogPosts",
    "footer"
  ],
  headerLanding: ["headerLanding"],
  humbergerMenu: ["humbergerMenu"],
  reveal: ["reveal", "accomplishment"],
  accomplishment: ["accomplishment"],
  testimonials: ["testimonials", "medalists", "medallists", "button"],
  medalists: ["medalists"],
  medallists: ["medallists"],
  button: ["button"],
  storyFrame: ["storyFrame"],
  blogPosts: ["blogPosts"],
  footer: ["footer"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  page: "div";
  headerLanding: typeof HeaderLanding;
  humbergerMenu: typeof HumbergerMenu;
  reveal: typeof Reveal;
  accomplishment: typeof Accomplishment;
  testimonials: "section";
  medalists: "div";
  medallists: typeof Medallists;
  button: typeof Button;
  storyFrame: typeof StoryFrame;
  blogPosts: typeof BlogPosts;
  footer: typeof Footer;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicHomepage__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicHomepage__VariantsArgs;
    args?: PlasmicHomepage__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicHomepage__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicHomepage__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicHomepage__ArgProps,
          internalVariantPropNames: PlasmicHomepage__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicHomepage__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "page") {
    func.displayName = "PlasmicHomepage";
  } else {
    func.displayName = `PlasmicHomepage.${nodeName}`;
  }
  return func;
}

export const PlasmicHomepage = Object.assign(
  // Top-level PlasmicHomepage renders the root element
  makeNodeComponent("page"),
  {
    // Helper components rendering sub-elements
    headerLanding: makeNodeComponent("headerLanding"),
    humbergerMenu: makeNodeComponent("humbergerMenu"),
    reveal: makeNodeComponent("reveal"),
    accomplishment: makeNodeComponent("accomplishment"),
    testimonials: makeNodeComponent("testimonials"),
    medalists: makeNodeComponent("medalists"),
    medallists: makeNodeComponent("medallists"),
    button: makeNodeComponent("button"),
    storyFrame: makeNodeComponent("storyFrame"),
    blogPosts: makeNodeComponent("blogPosts"),
    footer: makeNodeComponent("footer"),

    // Metadata about props expected for PlasmicHomepage
    internalVariantProps: PlasmicHomepage__VariantProps,
    internalArgProps: PlasmicHomepage__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicHomepage;
/* prettier-ignore-end */
