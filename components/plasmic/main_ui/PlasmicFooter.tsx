/* eslint-disable */
/* tslint:disable */
// @ts-nocheck
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 7Q2kKTTfJ4NHrVPwfjBiGV
// Component: LLPl5wc7oCu-

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import {
  Flex as Flex__,
  MultiChoiceArg,
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicIcon as PlasmicIcon__,
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  PlasmicPageGuard as PlasmicPageGuard__,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  Stack as Stack__,
  StrictProps,
  Trans as Trans__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  get as $stateGet,
  hasVariant,
  initializeCodeComponentStates,
  initializePlasmicStates,
  makeFragment,
  omit,
  pick,
  renderPlasmicSlot,
  set as $stateSet,
  useCurrentUser,
  useDollarState,
  usePlasmicTranslator,
  useTrigger,
  wrapWithClassName
} from "@plasmicapp/react-web";
import {
  DataCtxReader as DataCtxReader__,
  useDataEnv,
  useGlobalActions
} from "@plasmicapp/react-web/lib/host";

import { _useGlobalVariants } from "./plasmic"; // plasmic-import: 7Q2kKTTfJ4NHrVPwfjBiGV/projectModule
import { _useStyleTokens } from "./PlasmicStyleTokensProvider"; // plasmic-import: 7Q2kKTTfJ4NHrVPwfjBiGV/styleTokensProvider
import { _useStyleTokens as useStyleTokens_antd_5_hostless } from "../antd_5_hostless/PlasmicStyleTokensProvider"; // plasmic-import: ohDidvG9XsCeFumugENU3J/styleTokensProvider

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic.module.css"; // plasmic-import: 7Q2kKTTfJ4NHrVPwfjBiGV/projectcss
import sty from "./PlasmicFooter.module.css"; // plasmic-import: LLPl5wc7oCu-/css

import TelegramLogoSvgrepoComSvgIcon from "./icons/PlasmicIcon__TelegramLogoSvgrepoComSvg"; // plasmic-import: -oUV-gWxxdqM/icon
import Main4ShadLogoFarsgraphicSvgIcon from "./icons/PlasmicIcon__Main4ShadLogoFarsgraphicSvg"; // plasmic-import: l3zoobNgxwVN/icon
import EitaaSeeklogoSvgIcon from "./icons/PlasmicIcon__EitaaSeeklogoSvg"; // plasmic-import: ElkB46I9Pa1c/icon

createPlasmicElementProxy;

export type PlasmicFooter__VariantMembers = {};
export type PlasmicFooter__VariantsArgs = {};
type VariantPropType = keyof PlasmicFooter__VariantsArgs;
export const PlasmicFooter__VariantProps = new Array<VariantPropType>();

export type PlasmicFooter__ArgsType = {};
type ArgPropType = keyof PlasmicFooter__ArgsType;
export const PlasmicFooter__ArgProps = new Array<ArgPropType>();

export type PlasmicFooter__OverridesType = {
  root?: Flex__<"div">;
  columns?: Flex__<"div">;
  عکس?: Flex__<"div">;
  img?: Flex__<typeof PlasmicImg__>;
  اطلاعاتتماس?: Flex__<"div">;
  لینکهایمهم?: Flex__<"div">;
  دربارهما?: Flex__<"div">;
};

export interface DefaultFooterProps {
  className?: string;
}

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicFooter__RenderFunc(props: {
  variants: PlasmicFooter__VariantsArgs;
  args: PlasmicFooter__ArgsType;
  overrides: PlasmicFooter__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );

  const $props = {
    ...args,
    ...variants
  };

  const __nextRouter = useNextRouter();

  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const globalVariants = _useGlobalVariants();
  const styleTokensClassNames = _useStyleTokens();
  const styleTokensClassNames_antd_5_hostless =
    useStyleTokens_antd_5_hostless();

  return (
    <div
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(
        projectcss.all,
        projectcss.root_reset,
        projectcss.plasmic_default_styles,
        projectcss.plasmic_mixins,
        styleTokensClassNames,
        styleTokensClassNames_antd_5_hostless,
        sty.root
      )}
    >
      <div className={classNames(projectcss.all, sty.freeBox__xvzoY)}>
        <div
          data-plasmic-name={"columns"}
          data-plasmic-override={overrides.columns}
          className={classNames(projectcss.all, sty.columns)}
        >
          <div
            data-plasmic-name={"\u0639\u06a9\u0633"}
            data-plasmic-override={overrides.عکس}
            className={classNames(projectcss.all, sty.عکس)}
          >
            <PlasmicImg__
              data-plasmic-name={"img"}
              data-plasmic-override={overrides.img}
              alt={""}
              className={classNames(sty.img)}
              displayHeight={
                hasVariant(globalVariants, "screen", "mobileOnly")
                  ? "100%"
                  : "350px"
              }
              displayMaxHeight={"none"}
              displayMaxWidth={"100%"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={
                hasVariant(globalVariants, "screen", "mobileOnly")
                  ? "160px"
                  : "auto"
              }
              loading={"lazy"}
              src={{
                src: "/plasmic/main_ui/images/_2Svg3.svg",
                fullWidth: 375,
                fullHeight: 375,
                aspectRatio: 1
              }}
            />
          </div>
          <div
            data-plasmic-name={
              "\u0627\u0637\u0644\u0627\u0639\u0627\u062a\u062a\u0645\u0627\u0633"
            }
            data-plasmic-override={overrides.اطلاعاتتماس}
            className={classNames(projectcss.all, sty.اطلاعاتتماس)}
          >
            <h3
              className={classNames(
                projectcss.all,
                projectcss.h3,
                projectcss.__wab_text,
                sty.h3__yajrU
              )}
            >
              {hasVariant(globalVariants, "screen", "mobileOnly")
                ? "\u0627\u0637\u0644\u0627\u0639\u0627\u062a \u062a\u0645\u0627\u0633"
                : "\u0627\u0637\u0644\u0627\u0639\u0627\u062a \u062a\u0645\u0627\u0633"}
            </h3>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__yzuLg
              )}
            >
              {
                "\u0646\u0634\u0627\u0646\u06cc \u0645\u0627 \u062f\u0631 \u0634\u0628\u06a9\u0647\u200c\u0647\u0627\u06cc \u0645\u062c\u0627\u0632\u06cc"
              }
            </div>
            <div className={classNames(projectcss.all, sty.freeBox__xHzbp)}>
              <TelegramLogoSvgrepoComSvgIcon
                className={classNames(projectcss.all, sty.svg__qVse)}
                cursor={"Pointer "}
                onClick={async event => {
                  const $steps = {};

                  $steps["goToHttpTMeIlamOlympiadManager"] = true
                    ? (() => {
                        const actionArgs = {
                          destination: "http://t.me/ilam_olympiad_manager"
                        };
                        return (({ destination }) => {
                          if (
                            typeof destination === "string" &&
                            destination.startsWith("#")
                          ) {
                            document
                              .getElementById(destination.substr(1))
                              .scrollIntoView({ behavior: "smooth" });
                          } else {
                            __nextRouter?.push(destination);
                          }
                        })?.apply(null, [actionArgs]);
                      })()
                    : undefined;
                  if (
                    $steps["goToHttpTMeIlamOlympiadManager"] != null &&
                    typeof $steps["goToHttpTMeIlamOlympiadManager"] ===
                      "object" &&
                    typeof $steps["goToHttpTMeIlamOlympiadManager"].then ===
                      "function"
                  ) {
                    $steps["goToHttpTMeIlamOlympiadManager"] = await $steps[
                      "goToHttpTMeIlamOlympiadManager"
                    ];
                  }
                }}
                role={"img"}
              />

              <Main4ShadLogoFarsgraphicSvgIcon
                className={classNames(projectcss.all, sty.svg__ntUz4)}
                cursor={"Pointer "}
                onClick={async event => {
                  const $steps = {};

                  $steps["goToHttpsShadIrAiOlympiadAland"] = true
                    ? (() => {
                        const actionArgs = {
                          destination: "https://shad.ir/AI_Olympiad_aland"
                        };
                        return (({ destination }) => {
                          if (
                            typeof destination === "string" &&
                            destination.startsWith("#")
                          ) {
                            document
                              .getElementById(destination.substr(1))
                              .scrollIntoView({ behavior: "smooth" });
                          } else {
                            __nextRouter?.push(destination);
                          }
                        })?.apply(null, [actionArgs]);
                      })()
                    : undefined;
                  if (
                    $steps["goToHttpsShadIrAiOlympiadAland"] != null &&
                    typeof $steps["goToHttpsShadIrAiOlympiadAland"] ===
                      "object" &&
                    typeof $steps["goToHttpsShadIrAiOlympiadAland"].then ===
                      "function"
                  ) {
                    $steps["goToHttpsShadIrAiOlympiadAland"] = await $steps[
                      "goToHttpsShadIrAiOlympiadAland"
                    ];
                  }
                }}
                role={"img"}
              />

              <EitaaSeeklogoSvgIcon
                className={classNames(projectcss.all, sty.svg___0QpVv)}
                cursor={"Pointer "}
                onClick={async event => {
                  const $steps = {};

                  $steps["goToHttpsEitaaComAdminAland"] = true
                    ? (() => {
                        const actionArgs = {
                          destination: "https://eitaa.com/admin_aland"
                        };
                        return (({ destination }) => {
                          if (
                            typeof destination === "string" &&
                            destination.startsWith("#")
                          ) {
                            document
                              .getElementById(destination.substr(1))
                              .scrollIntoView({ behavior: "smooth" });
                          } else {
                            __nextRouter?.push(destination);
                          }
                        })?.apply(null, [actionArgs]);
                      })()
                    : undefined;
                  if (
                    $steps["goToHttpsEitaaComAdminAland"] != null &&
                    typeof $steps["goToHttpsEitaaComAdminAland"] === "object" &&
                    typeof $steps["goToHttpsEitaaComAdminAland"].then ===
                      "function"
                  ) {
                    $steps["goToHttpsEitaaComAdminAland"] = await $steps[
                      "goToHttpsEitaaComAdminAland"
                    ];
                  }
                }}
                role={"img"}
              />
            </div>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__iIrta
              )}
            >
              {
                "\u0627\u06cc\u0645\u06cc\u0644 \u0645\u0627\nolympiadilam1403@gmail.com"
              }
            </div>
          </div>
          <div
            data-plasmic-name={
              "\u0644\u06cc\u0646\u06a9\u0647\u0627\u06cc\u0645\u0647\u0645"
            }
            data-plasmic-override={overrides.لینکهایمهم}
            className={classNames(projectcss.all, sty.لینکهایمهم)}
          >
            <h3
              className={classNames(
                projectcss.all,
                projectcss.h3,
                projectcss.__wab_text,
                sty.h3___6CiWa
              )}
            >
              {"\u0644\u06cc\u0646\u06a9 \u0647\u0627\u06cc \u0645\u0647\u0645"}
            </h3>
            <PlasmicLink__
              className={classNames(
                projectcss.all,
                projectcss.a,
                projectcss.__wab_text,
                sty.link__fDuq3
              )}
              component={Link}
              onClick={async event => {
                const $steps = {};

                $steps["goToEventsList"] = true
                  ? (() => {
                      const actionArgs = { destination: `/events` };
                      return (({ destination }) => {
                        if (
                          typeof destination === "string" &&
                          destination.startsWith("#")
                        ) {
                          document
                            .getElementById(destination.substr(1))
                            .scrollIntoView({ behavior: "smooth" });
                        } else {
                          __nextRouter?.push(destination);
                        }
                      })?.apply(null, [actionArgs]);
                    })()
                  : undefined;
                if (
                  $steps["goToEventsList"] != null &&
                  typeof $steps["goToEventsList"] === "object" &&
                  typeof $steps["goToEventsList"].then === "function"
                ) {
                  $steps["goToEventsList"] = await $steps["goToEventsList"];
                }
              }}
              platform={"nextjs"}
            >
              {"\u0631\u0648\u06cc\u062f\u0627\u062f \u0647\u0627"}
            </PlasmicLink__>
            <PlasmicLink__
              className={classNames(
                projectcss.all,
                projectcss.a,
                projectcss.__wab_text,
                sty.link__t62Mr
              )}
              component={Link}
              onClick={async event => {
                const $steps = {};

                $steps["goToAboutUs"] = true
                  ? (() => {
                      const actionArgs = { destination: `/about-us` };
                      return (({ destination }) => {
                        if (
                          typeof destination === "string" &&
                          destination.startsWith("#")
                        ) {
                          document
                            .getElementById(destination.substr(1))
                            .scrollIntoView({ behavior: "smooth" });
                        } else {
                          __nextRouter?.push(destination);
                        }
                      })?.apply(null, [actionArgs]);
                    })()
                  : undefined;
                if (
                  $steps["goToAboutUs"] != null &&
                  typeof $steps["goToAboutUs"] === "object" &&
                  typeof $steps["goToAboutUs"].then === "function"
                ) {
                  $steps["goToAboutUs"] = await $steps["goToAboutUs"];
                }
              }}
              platform={"nextjs"}
            >
              {"\u062f\u0627\u0633\u062a\u0627\u0646 \u0645\u0627"}
            </PlasmicLink__>
            <PlasmicLink__
              className={classNames(
                projectcss.all,
                projectcss.a,
                projectcss.__wab_text,
                sty.link__klp00
              )}
              component={Link}
              onClick={async event => {
                const $steps = {};

                $steps["goToMedallists2"] = true
                  ? (() => {
                      const actionArgs = { destination: `/medallists` };
                      return (({ destination }) => {
                        if (
                          typeof destination === "string" &&
                          destination.startsWith("#")
                        ) {
                          document
                            .getElementById(destination.substr(1))
                            .scrollIntoView({ behavior: "smooth" });
                        } else {
                          __nextRouter?.push(destination);
                        }
                      })?.apply(null, [actionArgs]);
                    })()
                  : undefined;
                if (
                  $steps["goToMedallists2"] != null &&
                  typeof $steps["goToMedallists2"] === "object" &&
                  typeof $steps["goToMedallists2"].then === "function"
                ) {
                  $steps["goToMedallists2"] = await $steps["goToMedallists2"];
                }
              }}
              platform={"nextjs"}
            >
              {"\u0627\u0641\u062a\u062e\u0627\u0631\u0627\u062a"}
            </PlasmicLink__>
            <PlasmicLink__
              className={classNames(
                projectcss.all,
                projectcss.a,
                projectcss.__wab_text,
                sty.link__c5F7D
              )}
              component={Link}
              onClick={async event => {
                const $steps = {};

                $steps["goToContact"] = true
                  ? (() => {
                      const actionArgs = { destination: `/contact` };
                      return (({ destination }) => {
                        if (
                          typeof destination === "string" &&
                          destination.startsWith("#")
                        ) {
                          document
                            .getElementById(destination.substr(1))
                            .scrollIntoView({ behavior: "smooth" });
                        } else {
                          __nextRouter?.push(destination);
                        }
                      })?.apply(null, [actionArgs]);
                    })()
                  : undefined;
                if (
                  $steps["goToContact"] != null &&
                  typeof $steps["goToContact"] === "object" &&
                  typeof $steps["goToContact"].then === "function"
                ) {
                  $steps["goToContact"] = await $steps["goToContact"];
                }
              }}
              platform={"nextjs"}
            >
              {"\u062a\u0645\u0627\u0633 \u0628\u0627 \u0645\u0627"}
            </PlasmicLink__>
          </div>
          <div
            data-plasmic-name={
              "\u062f\u0631\u0628\u0627\u0631\u0647\u0645\u0627"
            }
            data-plasmic-override={overrides.دربارهما}
            className={classNames(projectcss.all, sty.دربارهما)}
          >
            <h3
              className={classNames(
                projectcss.all,
                projectcss.h3,
                projectcss.__wab_text,
                sty.h3__k7BHg
              )}
            >
              {"\u062f\u0631\u0628\u0627\u0631\u0647 \u0645\u0627"}
            </h3>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__mbSh
              )}
            >
              {
                "\u0631\u0634\u062f\u060c \u06a9\u0644\u06cc\u062f \u0648\u0627\u0698\u0647 \u0645\u0647\u0645 \u0645\u0627\u0633\u062a. \n\u0645\u0627 \u062f\u0631 \u0622\u0644\u0646\u062f\u06a9\u0644\u0627\u0633 \u0627\u06cc\u0646 \u0632\u0645\u06cc\u0646\u0647 \u0631\u0648 \u0641\u0631\u0627\u0647\u0645 \u0645\u06cc\u200c\u06a9\u0646\u06cc\u0645 \u06a9\u0647 \u0628\u0647\u062a\u0631\u06cc\u0646 \u0646\u0633\u062e\u0647 \u0627\u0632 \u062e\u0648\u062f\u062a\u0648\u0646 \u0631\u0648 \u0628\u0633\u0627\u0632\u06cc\u062f \u0648 \u0628\u0647 \u0633\u0645\u062a \u0631\u0648\u06cc\u0627\u0647\u0627\u062a\u0648\u0646 \u0642\u062f\u0645 \u0628\u0631\u062f\u0627\u0631\u06cc\u062f..."
              }
            </div>
          </div>
        </div>
      </div>
    </div>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "columns",
    "\u0639\u06a9\u0633",
    "img",
    "\u0627\u0637\u0644\u0627\u0639\u0627\u062a\u062a\u0645\u0627\u0633",
    "\u0644\u06cc\u0646\u06a9\u0647\u0627\u06cc\u0645\u0647\u0645",
    "\u062f\u0631\u0628\u0627\u0631\u0647\u0645\u0627"
  ],
  columns: [
    "columns",
    "\u0639\u06a9\u0633",
    "img",
    "\u0627\u0637\u0644\u0627\u0639\u0627\u062a\u062a\u0645\u0627\u0633",
    "\u0644\u06cc\u0646\u06a9\u0647\u0627\u06cc\u0645\u0647\u0645",
    "\u062f\u0631\u0628\u0627\u0631\u0647\u0645\u0627"
  ],
  عکس: ["\u0639\u06a9\u0633", "img"],
  img: ["img"],
  اطلاعاتتماس: [
    "\u0627\u0637\u0644\u0627\u0639\u0627\u062a\u062a\u0645\u0627\u0633"
  ],
  لینکهایمهم: ["\u0644\u06cc\u0646\u06a9\u0647\u0627\u06cc\u0645\u0647\u0645"],
  دربارهما: ["\u062f\u0631\u0628\u0627\u0631\u0647\u0645\u0627"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: "div";
  columns: "div";
  عکس: "div";
  img: typeof PlasmicImg__;
  اطلاعاتتماس: "div";
  لینکهایمهم: "div";
  دربارهما: "div";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicFooter__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicFooter__VariantsArgs;
    args?: PlasmicFooter__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicFooter__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicFooter__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicFooter__ArgProps,
          internalVariantPropNames: PlasmicFooter__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicFooter__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicFooter";
  } else {
    func.displayName = `PlasmicFooter.${nodeName}`;
  }
  return func;
}

export const PlasmicFooter = Object.assign(
  // Top-level PlasmicFooter renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    columns: makeNodeComponent("columns"),
    عکس: makeNodeComponent("\u0639\u06a9\u0633"),
    img: makeNodeComponent("img"),
    اطلاعاتتماس: makeNodeComponent(
      "\u0627\u0637\u0644\u0627\u0639\u0627\u062a\u062a\u0645\u0627\u0633"
    ),
    لینکهایمهم: makeNodeComponent(
      "\u0644\u06cc\u0646\u06a9\u0647\u0627\u06cc\u0645\u0647\u0645"
    ),
    دربارهما: makeNodeComponent(
      "\u062f\u0631\u0628\u0627\u0631\u0647\u0645\u0627"
    ),

    // Metadata about props expected for PlasmicFooter
    internalVariantProps: PlasmicFooter__VariantProps,
    internalArgProps: PlasmicFooter__ArgProps
  }
);

export default PlasmicFooter;
/* prettier-ignore-end */
